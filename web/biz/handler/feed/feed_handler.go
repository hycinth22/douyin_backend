// Code generated by hertz generator.

package feed

import (
	"context"
	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
	"github.com/cloudwego/kitex/client"
	"log"
	"simple-douyin-backend/kitex_gen/basic/feed"
	"simple-douyin-backend/kitex_gen/basic/feed/feedservice"
	"simple-douyin-backend/pkg/constants"
	"simple-douyin-backend/pkg/utils"
	feedHTTP "simple-douyin-backend/web/biz/model/basic/feed"
)

var feedClient feedservice.Client

func init() {
	var err error
	feedClient, err = feedservice.NewClient("feed_service", client.WithHostPorts(constants.FeedServiceAddr))
	if err != nil {
		log.Fatal(err)
	}
}

// Feed .
// @router /douyin/feed/ [GET]
func Feed(ctx context.Context, c *app.RequestContext) {
	var err error
	var req feedHTTP.DouyinFeedRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		resp := utils.ConvertToResp(err)
		c.JSON(consts.StatusOK, feed.DouyinFeedResponse{
			StatusCode: resp.StatusCode,
			StatusMsg:  resp.StatusMsg,
		})
		return
	}
	reqRPC := feed.DouyinFeedRequest{
		LatestTime: req.LatestTime,
		Token:      req.Token,
	}
	resp, err := feedClient.Feed(ctx, &reqRPC)
	c.JSON(consts.StatusOK, resp)
}
